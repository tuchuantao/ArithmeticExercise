package com.kevin.arithmetic.leetcode;

/**
 * Created by tuchuantao on 2021/9/10
 * Desc: 找到需要补充粉笔的学生编号
 */
public class Num1894 {
  /**
   * 一个班级里有n个学生，编号为 0到 n - 1。每个学生会依次回答问题，编号为 0的学生先回答，然后是编号为 1的学生，以此类推，直到编号为 n - 
   * 1的学生，然后老师会重复这个过程，重新从编号为 0的学生开始回答问题。
   * 给你一个长度为 n且下标从 0开始的整数数组chalk和一个整数k。一开始粉笔盒里总共有k支粉笔。当编号为i的学生回答问题时，他会消耗
   * chalk[i]支粉笔。如果剩余粉笔数量 严格小于chalk[i]，那么学生 i需要 补充粉笔。
   * 请你返回需要 补充粉笔的学生 编号。
   *
   * 示例 1：
   * 输入：chalk = [5,1,5], k = 22
   * 输出：0
   * 解释：学生消耗粉笔情况如下：
   * - 编号为 0 的学生使用 5 支粉笔，然后 k = 17 。
   * - 编号为 1 的学生使用 1 支粉笔，然后 k = 16 。
   * - 编号为 2 的学生使用 5 支粉笔，然后 k = 11 。
   * - 编号为 0 的学生使用 5 支粉笔，然后 k = 6 。
   * - 编号为 1 的学生使用 1 支粉笔，然后 k = 5 。
   * - 编号为 2 的学生使用 5 支粉笔，然后 k = 0 。
   * 编号为 0 的学生没有足够的粉笔，所以他需要补充粉笔。
   *
   * 示例 2：
   * 输入：chalk = [3,4,1,2], k = 25
   * 输出：1
   * 解释：学生消耗粉笔情况如下：
   * - 编号为 0 的学生使用 3 支粉笔，然后 k = 22 。
   * - 编号为 1 的学生使用 4 支粉笔，然后 k = 18 。
   * - 编号为 2 的学生使用 1 支粉笔，然后 k = 17 。
   * - 编号为 3 的学生使用 2 支粉笔，然后 k = 15 。
   * - 编号为 0 的学生使用 3 支粉笔，然后 k = 12 。
   * - 编号为 1 的学生使用 4 支粉笔，然后 k = 8 。
   * - 编号为 2 的学生使用 1 支粉笔，然后 k = 7 。
   * - 编号为 3 的学生使用 2 支粉笔，然后 k = 5 。
   * - 编号为 0 的学生使用 3 支粉笔，然后 k = 2 。
   * 编号为 1 的学生没有足够的粉笔，所以他需要补充粉笔。
   * 
   * 提示：
   * chalk.length == n
   * 1 <= n <= 10^5
   * 1 <= chalk[i] <= 10^5
   * 1 <= k <= 10^9
   *
   * 来源：力扣（LeetCode）
   * 链接：https://leetcode-cn.com/problems/find-the-student-that-will-replace-the-chalk
   * 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
   */
  public int chalkReplacer1(int[] chalk, int k) {
    int len = chalk.length;
    long sum = chalk[0]; // long型Sum,防止溢出
    for (int i = 1; i < len; i++) {
      sum += chalk[i];
      chalk[i] += chalk[i - 1];
    }
    k = (int) (k % sum);
    int pre = 0;
    for (int i = 0; i < len; i++) {
      if (chalk[i] > k && pre <= k) {
        return i;
      }
      pre = chalk[i];
    }
    return -1;
  }
}
